#ifndef __testSlave__
#define __testSlave__

#include "emulator.h"

class testSlave_t : public mod_t {
 private:
  val_t __rand_seed;
  void __srand(val_t seed) { __rand_seed = seed; }
  val_t __rand_val() { return ::__rand_val(&__rand_seed); }
 public:
  dat_t<1> testSlave__S_AXI_RVALID;
  dat_t<1> testSlave__S_AXI_WVALID;
  dat_t<1> testSlave__mem_wren;
  dat_t<1> reset;
  dat_t<1> testSlave__S_AXI_ARVALID;
  dat_t<1> testSlave__S_AXI_RREADY;
  dat_t<1> testSlave__S_AXI_AWVALID;
  dat_t<1> testSlave__mem_rden;
  dat_t<1> T231;
  dat_t<1> testSlave__axi_rlast;
   dat_t<1> testSlave__axi_rlast__shadow;
  dat_t<1> testSlave__S_AXI_RLAST;
  dat_t<1> testSlave__S_AXI_ARREADY;
  dat_t<1> testSlave__S_AXI_WREADY;
  dat_t<1> testSlave__S_AXI_AWREADY;
  dat_t<1> testSlave__S_AXI_BVALID;
  dat_t<1> testSlave__S_AXI_WLAST;
  dat_t<1> T247;
  dat_t<1> testSlave__axi_awready;
   dat_t<1> testSlave__axi_awready__shadow;
  dat_t<1> T254;
  dat_t<1> testSlave__axi_rvalid;
   dat_t<1> testSlave__axi_rvalid__shadow;
  dat_t<1> T277;
  dat_t<1> testSlave__axi_arready;
   dat_t<1> testSlave__axi_arready__shadow;
  dat_t<1> T283;
  dat_t<1> testSlave__axi_arv_arr_flag;
   dat_t<1> testSlave__axi_arv_arr_flag__shadow;
  dat_t<1> T289;
  dat_t<1> testSlave__axi_awv_awr_flag;
   dat_t<1> testSlave__axi_awv_awr_flag__shadow;
  dat_t<1> T302;
  dat_t<1> testSlave__axi_wready;
   dat_t<1> testSlave__axi_wready__shadow;
  dat_t<1> testSlave__S_AXI_BREADY;
  dat_t<1> T317;
  dat_t<1> testSlave__axi_bvalid;
   dat_t<1> testSlave__axi_bvalid__shadow;
  dat_t<2> testSlave__S_AXI_ARBURST;
  dat_t<2> T74;
  dat_t<2> testSlave__axi_arburst;
   dat_t<2> testSlave__axi_arburst__shadow;
  dat_t<2> testSlave__S_AXI_AWBURST;
  dat_t<2> T137;
  dat_t<2> testSlave__axi_awburst;
   dat_t<2> testSlave__axi_awburst__shadow;
  dat_t<2> T214;
  dat_t<2> testSlave__axi_rresp;
   dat_t<2> testSlave__axi_rresp__shadow;
  dat_t<2> testSlave__S_AXI_RRESP;
  dat_t<2> T319;
  dat_t<2> testSlave__axi_bresp;
   dat_t<2> testSlave__axi_bresp__shadow;
  dat_t<2> testSlave__S_AXI_BRESP;
  dat_t<3> testSlave__S_AXI_AWSIZE;
  dat_t<3> testSlave__S_AXI_ARSIZE;
  dat_t<4> testSlave__mem_address;
  dat_t<4> testSlave__S_AXI_WSTRB;
  dat_t<6> testSlave__S_AXI_ARID;
  dat_t<6> testSlave__S_AXI_RID;
  dat_t<6> testSlave__S_AXI_ARADDR;
  dat_t<6> T115;
  dat_t<6> testSlave__axi_araddr;
   dat_t<6> testSlave__axi_araddr__shadow;
  dat_t<6> testSlave__S_AXI_AWADDR;
  dat_t<6> T172;
  dat_t<6> testSlave__axi_awaddr;
   dat_t<6> testSlave__axi_awaddr__shadow;
  dat_t<6> testSlave__S_AXI_AWID;
  dat_t<6> testSlave__S_AXI_BID;
  dat_t<8> T133;
  dat_t<8> testSlave__axi_awlen_cntr;
   dat_t<8> testSlave__axi_awlen_cntr__shadow;
  dat_t<8> testSlave__S_AXI_AWLEN;
  dat_t<8> T135;
  dat_t<8> testSlave__axi_awlen;
   dat_t<8> testSlave__axi_awlen__shadow;
  dat_t<8> T257;
  dat_t<8> testSlave__axi_arlen_cntr;
   dat_t<8> testSlave__axi_arlen_cntr__shadow;
  dat_t<8> testSlave__S_AXI_ARLEN;
  dat_t<8> T259;
  dat_t<8> testSlave__axi_arlen;
   dat_t<8> testSlave__axi_arlen__shadow;
  dat_t<32> testSlave__S_AXI_WDATA;
  dat_t<32> testSlave__data_in;
  dat_t<32> T9;
  dat_t<32> testSlave__bram_15;
   dat_t<32> testSlave__bram_15__shadow;
  dat_t<32> T13;
  dat_t<32> testSlave__bram_14;
   dat_t<32> testSlave__bram_14__shadow;
  dat_t<32> T17;
  dat_t<32> testSlave__bram_13;
   dat_t<32> testSlave__bram_13__shadow;
  dat_t<32> T21;
  dat_t<32> testSlave__bram_12;
   dat_t<32> testSlave__bram_12__shadow;
  dat_t<32> T25;
  dat_t<32> testSlave__bram_11;
   dat_t<32> testSlave__bram_11__shadow;
  dat_t<32> T29;
  dat_t<32> testSlave__bram_10;
   dat_t<32> testSlave__bram_10__shadow;
  dat_t<32> T33;
  dat_t<32> testSlave__bram_9;
   dat_t<32> testSlave__bram_9__shadow;
  dat_t<32> T37;
  dat_t<32> testSlave__bram_8;
   dat_t<32> testSlave__bram_8__shadow;
  dat_t<32> T41;
  dat_t<32> testSlave__bram_7;
   dat_t<32> testSlave__bram_7__shadow;
  dat_t<32> T45;
  dat_t<32> testSlave__bram_6;
   dat_t<32> testSlave__bram_6__shadow;
  dat_t<32> T49;
  dat_t<32> testSlave__bram_5;
   dat_t<32> testSlave__bram_5__shadow;
  dat_t<32> T53;
  dat_t<32> testSlave__bram_4;
   dat_t<32> testSlave__bram_4__shadow;
  dat_t<32> T57;
  dat_t<32> testSlave__bram_3;
   dat_t<32> testSlave__bram_3__shadow;
  dat_t<32> T61;
  dat_t<32> testSlave__bram_2;
   dat_t<32> testSlave__bram_2__shadow;
  dat_t<32> T65;
  dat_t<32> testSlave__bram_1;
   dat_t<32> testSlave__bram_1__shadow;
  dat_t<32> T176;
  dat_t<32> testSlave__bram_0;
   dat_t<32> testSlave__bram_0__shadow;
  dat_t<32> testSlave__data_out;
  dat_t<32> T207;
  dat_t<32> testSlave__axi_rdata;
   dat_t<32> testSlave__axi_rdata__shadow;
  dat_t<32> testSlave__S_AXI_RDATA;
  dat_t<1> testSlave__S_AXI_RVALID__prev;
  dat_t<1> testSlave__S_AXI_WVALID__prev;
  dat_t<1> testSlave__mem_wren__prev;
  dat_t<1> testSlave__S_AXI_ARVALID__prev;
  dat_t<1> testSlave__S_AXI_RREADY__prev;
  dat_t<1> testSlave__S_AXI_AWVALID__prev;
  dat_t<1> testSlave__mem_rden__prev;
  dat_t<1> testSlave__axi_rlast__prev;
  dat_t<1> testSlave__S_AXI_RLAST__prev;
  dat_t<1> testSlave__S_AXI_ARREADY__prev;
  dat_t<1> testSlave__S_AXI_WREADY__prev;
  dat_t<1> testSlave__S_AXI_AWREADY__prev;
  dat_t<1> testSlave__S_AXI_BVALID__prev;
  dat_t<1> testSlave__S_AXI_WLAST__prev;
  dat_t<1> testSlave__axi_awready__prev;
  dat_t<1> testSlave__axi_rvalid__prev;
  dat_t<1> testSlave__axi_arready__prev;
  dat_t<1> testSlave__axi_arv_arr_flag__prev;
  dat_t<1> testSlave__axi_awv_awr_flag__prev;
  dat_t<1> testSlave__axi_wready__prev;
  dat_t<1> testSlave__S_AXI_BREADY__prev;
  dat_t<1> testSlave__axi_bvalid__prev;
  dat_t<2> testSlave__S_AXI_ARBURST__prev;
  dat_t<2> testSlave__axi_arburst__prev;
  dat_t<2> testSlave__S_AXI_AWBURST__prev;
  dat_t<2> testSlave__axi_awburst__prev;
  dat_t<2> testSlave__axi_rresp__prev;
  dat_t<2> testSlave__S_AXI_RRESP__prev;
  dat_t<2> testSlave__axi_bresp__prev;
  dat_t<2> testSlave__S_AXI_BRESP__prev;
  dat_t<3> testSlave__S_AXI_AWSIZE__prev;
  dat_t<3> testSlave__S_AXI_ARSIZE__prev;
  dat_t<4> testSlave__mem_address__prev;
  dat_t<4> testSlave__S_AXI_WSTRB__prev;
  dat_t<6> testSlave__S_AXI_ARID__prev;
  dat_t<6> testSlave__S_AXI_RID__prev;
  dat_t<6> testSlave__S_AXI_ARADDR__prev;
  dat_t<6> testSlave__axi_araddr__prev;
  dat_t<6> testSlave__S_AXI_AWADDR__prev;
  dat_t<6> testSlave__axi_awaddr__prev;
  dat_t<6> testSlave__S_AXI_AWID__prev;
  dat_t<6> testSlave__S_AXI_BID__prev;
  dat_t<8> testSlave__axi_awlen_cntr__prev;
  dat_t<8> testSlave__S_AXI_AWLEN__prev;
  dat_t<8> testSlave__axi_awlen__prev;
  dat_t<8> testSlave__axi_arlen_cntr__prev;
  dat_t<8> testSlave__S_AXI_ARLEN__prev;
  dat_t<8> testSlave__axi_arlen__prev;
  dat_t<32> testSlave__S_AXI_WDATA__prev;
  dat_t<32> testSlave__data_in__prev;
  dat_t<32> testSlave__bram_15__prev;
  dat_t<32> testSlave__bram_14__prev;
  dat_t<32> testSlave__bram_13__prev;
  dat_t<32> testSlave__bram_12__prev;
  dat_t<32> testSlave__bram_11__prev;
  dat_t<32> testSlave__bram_10__prev;
  dat_t<32> testSlave__bram_9__prev;
  dat_t<32> testSlave__bram_8__prev;
  dat_t<32> testSlave__bram_7__prev;
  dat_t<32> testSlave__bram_6__prev;
  dat_t<32> testSlave__bram_5__prev;
  dat_t<32> testSlave__bram_4__prev;
  dat_t<32> testSlave__bram_3__prev;
  dat_t<32> testSlave__bram_2__prev;
  dat_t<32> testSlave__bram_1__prev;
  dat_t<32> testSlave__bram_0__prev;
  dat_t<32> testSlave__data_out__prev;
  dat_t<32> testSlave__axi_rdata__prev;
  dat_t<32> testSlave__S_AXI_RDATA__prev;
  clk_t clk;
  dat_t<1> reset__prev;

  void init ( val_t rand_init = 0 );
  void clock_lo ( dat_t<1> reset, bool assert_fire=true );
  void clock_hi ( dat_t<1> reset );
  int clock ( dat_t<1> reset );
  void print ( FILE* f );
  void print ( std::ostream& s );
  void dump ( FILE* f, val_t t, dat_t<1> reset=LIT<1>(0) );
  void dump_init ( FILE* f );

};

#include "emul_api.h"
class testSlave_api_t : public emul_api_t {
 public:
  testSlave_api_t(mod_t* m) : emul_api_t(m) { }
  void init_sim_data();
};

#endif
